{"version":3,"file":"static/webpack/static/development/pages/index.js.5d74c795175832a8d92f.hot-update.js","sources":["webpack:///./components/index/FiltersBar.jsx","webpack:///./pages/index.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nconst FiltersBar = ({ filterOptions, setSelectedFilter, setSortedPrice }) => (\n  <Container>\n    <h5>Filtrar por: </h5>\n    <h5>Categorias </h5>\n    <select onChange={(e) => setSelectedFilter(e.target.value)}>\n      <option value=''>All</option>\n      {filterOptions.map((category) => (\n        <option value={category}>{category}</option>\n      ))}\n    </select>\n    <h5>Precio </h5>\n    <Button onClick={() => setSortedPrice(!sortedPrice)}>\n      {sortedPrice ? 'Ascendending' : 'Descending'}\n    </Button>\n  </Container>\n)\n\nconst Container = styled.div`\n  grid-column: 2 / -2;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 1vh;\n  margin-bottom: 4rem;\n\n  select {\n    background-color: #d70026;\n    box-sizing: border-box;\n    margin: 0;\n    color: #ffec5c;\n    border: none;\n    padding: 0.5vh;\n    width: 15vh;\n    box-shadow: 0 1px 0 1px rgba(0, 0, 0, 0.04);\n    border-radius: 0.5vh;\n  }\n\n  h5 {\n    color: #ffec5c;\n    margin: 0 1vh;\n    padding: none;\n  }\n`\n\nexport default FiltersBar\n\n// _id, category, cost, name, img.url\n","import { useState, useContext, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport * as R from 'ramda'\n// API\nimport api from '../api'\n\n// Components\nimport MainLayout from '../layouts/MainLayout'\nimport Product from '../components/index/Product'\nimport FiltersBar from '../components/index/FiltersBar'\n\n// State\nimport ProductContext from '../state/product/context'\nimport UserContext from '../state/user/context'\n\nconst IndexPage = ({ products, userData }) => {\n  const [selectedFilter, setSelectedFilter] = useState('')\n  const [sortedPrice, setSortedPrice] = useState(true)\n  const productContext = useContext(ProductContext)\n  const userContext = useContext(UserContext)\n\n  useEffect(() => {\n    productContext.updateProductList(products)\n    userContext.updateUserData(userData)\n  }, [])\n\n  const filterOptions = () => {\n    return productContext.productState.products.reduce((acc, product) => {\n      if (acc.indexOf(product.category) === -1) {\n        acc.push(product.category)\n      }\n      return acc\n    }, [])\n  }\n\n  return (\n    <>\n      <MainLayout>\n        <FiltersBar />\n        <ProductsContainer>\n          {productContext.productState.products &&\n            R.pipe(\n              R.filter((product) => product.category.includes(selectedFilter)),\n              R.ifElse(\n                () => sortedPrice,\n                R.sort(R.ascend(R.prop('cost'))),\n                R.sort(R.descend(R.prop('cost')))\n              ),\n              R.map((product) => (\n                <Product\n                  key={product._id}\n                  product={product}\n                  userData={userContext.userState.data}\n                />\n              ))\n            )(productContext.productState.products)}\n        </ProductsContainer>\n      </MainLayout>\n    </>\n  )\n}\n\nconst ProductsContainer = styled.div`\n  grid-column: 2 / -2;\n  display: grid;\n  grid-template: auto / repeat(auto-fill, minmax(260px, 1fr));\n  grid-gap: 24px;\n`\n\nconst Button = styled.button`\n  background-color: #d70026;\n  box-sizing: border-box;\n  margin: 0;\n  color: #ffec5c;\n  border: none;\n  padding: 0.5vh;\n  width: 15vh;\n  box-shadow: 0 1px 0 1px rgba(0, 0, 0, 0.04);\n  border-radius: 0.5vh;\n`\n\nIndexPage.getInitialProps = async () => {\n  let products = []\n  let userData = {}\n  try {\n    const userDataRes = await api.user.getData()\n    userData = userDataRes.data\n\n    const productsRes = await api.product.getAllProducts()\n    products = productsRes.data\n  } catch (err) {\n    console.error(err)\n  }\n  return { products, userData }\n}\n\nexport default IndexPage\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AACA;AAgBA;AA4BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AACA;AACA;AAOA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAYA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;A","sourceRoot":""}