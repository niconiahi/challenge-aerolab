{"version":3,"file":"static/webpack/static/development/pages/index.js.f5d070229e161dbceeb2.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport * as R from 'ramda'\n// API\nimport api from \"../api\";\n\n// Components\nimport MainLayout from \"../layouts/MainLayout\";\nimport Product from \"../components/index/Product\";\n\n// State\nimport ProductContext from \"../state/product/context\";\nimport UserContext from \"../state/user/context\";\n\nconst IndexPage = ({ products, userData }) => {\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\n  const [sortedPrice, setSortedPrice] = useState(true);\n  const productContext = useContext(ProductContext);\n  const userContext = useContext(UserContext);\n\n  useEffect(() => {\n    productContext.updateProductList(products);\n    userContext.updateUserData(userData);\n  }, []);\n\n  console.log(productContext.productState.products)\n\n  const filterOptions = () => {\n    return productContext.productState.products.reduce((acc, product) => {\n      if (acc.indexOf(product.category) === -1) {\n        acc.push(product.category);\n      }\n      return acc;\n    }, []);\n  };\n\n  const sortByPrice = (a, b) => { \n    if (sortedPrice) {\n      return a - b; \n    } else {\n      return b - a;\n    }\n  };\n\n  return (\n    <>\n      <MainLayout>\n        <FiltersContainer>\n          <h5>Filtrar por: </h5>\n          <h5>Categorias </h5>\n          <select onChange={e => setSelectedFilter(e.target.value)}>\n            <option value=\"\">All</option>\n            {filterOptions().map(category => (\n              <option value={category}>{category}</option>\n            ))}\n          </select>\n          <h5>Precio </h5>\n          <Button onClick={() => setSortedPrice(!sortedPrice)}>\n            {sortedPrice ? \"Ascendending\" : \"Descending\"}\n          </Button>\n        </FiltersContainer>\n        {productContext.productState.products &&\n          R.pipe(\n            R.filter(product => product.category.includes(selectedFilter)),\n            R.map(product => (\n              <Product\n                key={product._id}\n                product={product}\n                userData={userContext.userState.data}\n              />\n            ))\n          )(productContext.productState.products)}\n      </MainLayout>\n    </>\n  );\n};\n\nconst FiltersContainer = styled.div`\n  grid-column: 1 / -1;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  background-color: #002c54;\n  padding: 1vh;\n\n  select {\n    background-color: #d70026;\n    box-sizing: border-box;\n    margin: 0;\n    color: #ffec5c;\n    border: none;\n    padding: 0.5vh;\n    width: 15vh;\n    box-shadow: 0 1px 0 1px rgba(0, 0, 0, 0.04);\n    border-radius: 0.5vh;\n  }\n\n  h5 {\n    color: #ffec5c;\n    margin: 0 1vh;\n    padding: none;\n  }\n`;\n\nconst Button = styled.button`\n  background-color: #d70026;\n  box-sizing: border-box;\n  margin: 0;\n  color: #ffec5c;\n  border: none;\n  padding: 0.5vh;\n  width: 15vh;\n  box-shadow: 0 1px 0 1px rgba(0, 0, 0, 0.04);\n  border-radius: 0.5vh;\n`;\n\nIndexPage.getInitialProps = async () => {\n  let products = [];\n  let userData = {};\n  try {\n    const userDataRes = await api.user.getData();\n    userData = userDataRes.data;\n\n    const productsRes = await api.product.getAllProducts();\n    products = productsRes.data;\n  } catch (err) {\n    console.error(err);\n  }\n  return { products, userData };\n};\n\nexport default IndexPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AACA;AACA;AA4BA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AALA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAYA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;A","sourceRoot":""}