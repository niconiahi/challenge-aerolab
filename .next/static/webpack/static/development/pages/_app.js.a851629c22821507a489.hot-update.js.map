{"version":3,"file":"static/webpack/static/development/pages/_app.js.a851629c22821507a489.hot-update.js","sources":["webpack:///./state/index.js"],"sourcesContent":["import { useReducer } from 'react'\n\nimport ProductContext from './product/context'\nimport { ProductReducers, PRODUCTS_UPDATE } from './product/reducers'\nimport UserContext from './user/context'\nimport {\n  UserReducers,\n  USER_UPDATE,\n  /* PRODUCT_REDEEM,\n  POINTS_ADD */\n} from './user/reducers'\n\nconst GlobalState = ({ children }) => {\n  const [productState, productDispatch] = useReducer(ProductReducers, {\n    products: [],\n    pageNumber: 0,\n  })\n  const [userState, userDispatch] = useReducer(UserReducers, { data: {} })\n\n  // getProductsPaginated(16, 2)\n  const getProductsPage = () => {\n    return productState.products.slice(\n      productState.pageNumber * 16,\n      (productState.pageNumber + 1) * 16\n    )\n\n    // The below code generates an array of arrays of 16 elements but I decided not to use it\n    //\n    // let productsPaginated = []\n    // let pageNumber = 0\n    //\n    // while (pageNumber < productState.products.length / pageSize) {\n    //   productsPaginated.push(\n    //     productState.products.slice(pageNumber * pageSize, (pageNumber + 1) * pageSize)\n    //   )\n    //   pageNumber++\n    // }\n    //\n    // return productsPaginated\n  }\n\n  const setPageNumber = (pageNumber) => {\n    productDispatch({ type: PAGE_NUMBER_SET, pageNumber })\n  }\n\n  const updateProductList = (products) => {\n    productDispatch({ type: PRODUCTS_UPDATE, products })\n  }\n\n  const updateUserData = (userData) => {\n    userDispatch({ type: USER_UPDATE, userData })\n  }\n\n  // Las pretendia usar pero tuve un problema con useReducer\n  // y el hecho de que no se por que razon no se puede ejecutar async-await\n  // en el body de su ejecucion. Si hay dudas de lo que intente hacer, por favor\n  // comunicarse conmigo. Encantado de explicar como lo encare\n\n  // const redeemProduct = productId => {\n  //   userDispatch({ type: PRODUCT_REDEEM, productId });\n  // };\n\n  // const addPoints = quantity => {\n  //   userDispatch({ type: POINTS_ADD, quantity });\n  // };\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productState,\n        updateProductList,\n        getProductsPage,\n        setPageNumber,\n      }}>\n      <UserContext.Provider\n        value={{ userState, updateUserData /* redeemProduct, addPoints */ }}>\n        {children}\n      </UserContext.Provider>\n    </ProductContext.Provider>\n  )\n}\n\nexport default GlobalState\n\n// const productContext = useContext(ProductContext);\n// const userContext = useContext(UserContext);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAAA;AACA;AADA;AAEA;AACA;AAFA;AADA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AALA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAGA;;;;A","sourceRoot":""}